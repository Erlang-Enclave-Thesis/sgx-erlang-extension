/*
 * Copyright (C) 2011-2020 Intel Corporation. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *   * Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in
 *     the documentation and/or other materials provided with the
 *     distribution.
 *   * Neither the name of Intel Corporation nor the names of its
 *     contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

/* Enclave.edl - Top EDL file. */

enclave {
    include "sgx_report.h"

    from "sgx_tstdc.edl" import *;
    /* Import ECALL/OCALL from sub-directory EDLs.
     *  [from]: specifies the location of EDL file.
     *  [import]: specifies the functions to import,
     *  [*]: implies to import all functions.
     */


    trusted {
        public sgx_status_t ecall_verify_report(
                                [in, size = report_size] uint8_t* p_report,
                                uint64_t report_size,
                                [in, size = rand_size] uint8_t *p_rand,
                                uint16_t rand_size,
                                [in, size = quote_size]uint8_t* p_quote,
                                uint64_t quote_size,
                                [in, size = qveid_size]uint8_t* p_qveid,
                                uint32_t qveid_size,
                                [in, size = qveid_issue_chain_size]uint8_t* p_qveid_issue_chain,
                                uint32_t qveid_issue_chain_size,
                                [in, size = root_ca_crl_size]uint8_t* p_root_ca_crl,
                                uint32_t root_ca_crl_size,
                                int64_t expiration_check_date,
                                uint32_t collateral_expiration_status,
                                uint32_t verification_result,
                                [in, size = supplemental_data_size] uint8_t* p_supplemental_data,
                                uint32_t supplemental_data_size);

        public sgx_status_t ecall_get_target_info([out] sgx_target_info_t* target_info);
    };
};
